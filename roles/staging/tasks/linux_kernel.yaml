---
- name: Install additional packages
  become: true
  ansible.builtin.command: pacman --noconfirm -S linux linux-firmware linux-headers lvm2
  register: pacmaninstall
  changed_when: pacmaninstall.rc == 0

- name: Replace hooks in mkinitcpio.conf (encryption)
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: "^HOOKS="
    line: 'HOOKS="base udev autodetect modconf block keyboard keymap encrypt lvm2 filesystems fsck"'
  when: arch.is_encrypted

- name: Replace hooks in mkinitcpio.conf
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: "^HOOKS="
    line: 'HOOKS="base udev autodetect modconf block keyboard keymap lvm2 filesystems fsck"'
  when: not arch.is_encrypted

- name: Build kernel
  become: true
  ansible.builtin.command: mkinitcpio -p linux
  register: mkinitcpio
  changed_when: mkinitcpio.rc == 0

- name: Install bootloader
  become: true
  ansible.builtin.command: bootctl --path=/boot install
  register: bootctl
  changed_when: bootctl.rc == 0

- name: Ensure old bootloader conf removed
  become: true
  ansible.builtin.file:
    path: /boot/loader/loader.conf
    state: absent

- name: Recreate new bootloader conf
  become: true
  ansible.builtin.template:
    src: loader.conf
    dest: /boot/loader/loader.conf
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"

- name: Recreate new entry conf for encrypted hd
  become: true
  ansible.builtin.template:
    src: entry_encrypted.conf
    dest: "/boot/loader/entries/{{ arch.installationname }}.conf"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  when: arch.is_encrypted

- name: Recreate new entry conf
  become: true
  ansible.builtin.template:
    src: entry.conf
    dest: "/boot/loader/entries/{{ arch.installationname }}.conf"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  when: not arch.is_encrypted
